USE ROLE SBX_EA_GENERAL_FR;
USE SECONDARY ROLES ALL;



CREATE OR REPLACE TEMPORARY TABLE ISAM AS 
SELECT DISTINCT CUST_ACCT_ID,
BUS_SGMNT,
REP_ID AS ISAM_NUMBER,
REP_NAME AS ISAM_NAME
FROM PRD_PSAS_ANALYTICS_DB.GOLD_CRM.VW_REP_HIERARCHY 
WHERE CURRENT_RECORD_IND = 'Y' 
AND ROLE_TYPE = 'ISAM'
GROUP BY 1,2,3,4;

CREATE OR REPLACE TEMPORARY TABLE VPS AS 
SELECT DISTINCT CUST_ACCT_ID,
VPS_NUM,
VPS_NAME
FROM PRD_PSAS_ANALYTICS_DB.GOLD_CRM.VW_REP_HIERARCHY 
WHERE CURRENT_RECORD_IND = 'Y' 
AND VPS_NAME <> 'null'
GROUP BY 1,2,3;

CREATE OR REPLACE TEMPORARY TABLE HIER AS 
SELECT ISAM.*,
VPS.VPS_NUM,
VPS.VPS_NAME
FROM ISAM ISAM
LEFT JOIN VPS VPS
ON ISAM.CUST_ACCT_ID=VPS.CUST_ACCT_ID;

CREATE OR REPLACE TEMPORARY TABLE PREP AS
SELECT  COPA.CUST_NUM AS CUST_ACCT_ID,
        CUST.CUST_ACCT_NAM,
        CUST.SAP_BUS_TYPE_DSCR,
        CUST.ACTIVE_CUST_IND,
        CUST.SLS_TERR_ID,
        CUST.HOME_DC_ID,
        CUST.DEA_NUM,
        CUST.ACCT_CLAS_CD,
        CUST.ACCT_CLAS_DSCR,
        CUST.CUST_BUS_TYP_DSCR,
        CUST.COMMON_ENTITY_ID,
        CUST.COMMON_ENTITY_NAME,
        CUST.COMMON_GRP_ID,
        CUST.COMMON_GRP_NAME,
        CUST.ACCT_340B_ID,
        CUST.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_FLG,
        CUST.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_PCT_RANGE_DSCR,
        CASE WHEN HIER.ISAM_NUMBER IS NULL THEN 'Not Assigned' ELSE HIER.ISAM_NUMBER END AS "ISAM_NUMBER",
        CASE WHEN HIER.ISAM_NAME IS NULL THEN 'Not Assigned' ELSE HIER.ISAM_NAME END AS "ISAM_NAME",
        CASE WHEN HIER.VPS_NUM IS NULL THEN 'Not Assigned' ELSE HIER.VPS_NUM END AS "VPS_NUMBER",
        CASE WHEN HIER.VPS_NAME IS NULL THEN 'Not Assigned' ELSE HIER.VPS_NAME END AS "VPS_NAME",
        HIER.BUS_SGMNT,
        
        --NET SLS 12 MONTH
        SUM(GROSS_SLS + RTRN) AS NET_SLS_12MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Gx' THEN GROSS_SLS + RTRN ELSE 0 END) AS GX_SLS_12MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP<>'Bx OTC' THEN GROSS_SLS + RTRN ELSE 0 END) AS RX_SLS_12MO,

        --NET SLS 9 MONTH ANNUALIZED
        SUM(CASE WHEN POST_DT BETWEEN '2023-11-01' AND '2024-07-31' THEN (GROSS_SLS + RTRN)*4/3 ELSE 0 END) AS NET_SLS_9MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Gx' AND (POST_DT BETWEEN '2023-11-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*4/3 ELSE 0 END) AS GX_SLS_9MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP<>'Bx OTC' AND (POST_DT BETWEEN '2023-11-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*4/3 ELSE 0 END) AS RX_SLS_9MO,

        --NET SLS 6 MONTH ANNUALIZED
        SUM(CASE WHEN POST_DT BETWEEN '2024-02-01' AND '2024-07-31' THEN (GROSS_SLS + RTRN)*2 ELSE 0 END) AS NET_SLS_6MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Gx' AND (POST_DT BETWEEN '2024-02-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*2 ELSE 0 END) AS GX_SLS_6MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP<>'Bx OTC' AND (POST_DT BETWEEN '2024-02-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*2 ELSE 0 END) AS RX_SLS_6MO,

        --NET SLS 3 MONTH ANNUALIZED
        SUM(CASE WHEN POST_DT BETWEEN '2024-05-01' AND '2024-07-31' THEN (GROSS_SLS + RTRN)*4 ELSE 0 END) AS NET_SLS_3MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Gx' AND (POST_DT BETWEEN '2024-05-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*4 ELSE 0 END) AS GX_SLS_3MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP<>'Bx OTC' AND (POST_DT BETWEEN '2024-05-01' AND '2024-07-31') THEN (GROSS_SLS + RTRN)*4 ELSE 0 END) AS RX_SLS_3MO,

        SUM(GROSS_PROFIT) AS GP_12MO,
        SUM(CASE WHEN POST_DT BETWEEN '2023-11-01' AND '2024-07-31' THEN GROSS_PROFIT*4/3 ELSE 0 END) AS GP_9MO,
        SUM(CASE WHEN POST_DT BETWEEN '2024-02-01' AND '2024-07-31' THEN GROSS_PROFIT*2 ELSE 0 END) AS GP_6MO,
        SUM(CASE WHEN POST_DT BETWEEN '2024-05-01' AND '2024-07-31' THEN GROSS_PROFIT*4 ELSE 0 END) AS GP_3MO,
        
        SUM(VAR_EBIT) AS EBIT_12MO,
        SUM(CASE WHEN POST_DT BETWEEN '2023-11-01' AND '2024-07-31' THEN VAR_EBIT*4/3 ELSE 0 END) AS EBIT_9MO,
        SUM(CASE WHEN POST_DT BETWEEN '2024-02-01' AND '2024-07-31' THEN VAR_EBIT*2 ELSE 0 END) AS EBIT_6MO,
        SUM(CASE WHEN POST_DT BETWEEN '2024-05-01' AND '2024-07-31' THEN VAR_EBIT*4 ELSE 0 END) AS EBIT_3MO,
        
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Gx' AND CMPNY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS GX_EBIT_12MO,
        SUM(CASE WHEN (SLS_CTGRY_PRC_PROD_GRP='Bx' OR SLS_CTGRY_PRC_PROD_GRP IS NULL) AND CMPNY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS BX_EBIT_12MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Sx' AND CMPNY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS SX_EBIT_12MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Bio' AND CMPNY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS BIO_EBIT_12MO,
        SUM(CASE WHEN CMPNY_CD = '8545' THEN VAR_EBIT ELSE 0 END) AS MPB_EBIT_12MO,
        SUM(CASE WHEN SLS_CTGRY_PRC_PROD_GRP='Bx OTC' AND CMPNY_CD <> '8545' THEN VAR_EBIT ELSE 0 END) AS OTC_EBIT_12MO
  
FROM    "SBX_PSAS_DB"."SBX_EA_ALL"."V_COPA_EA" COPA
JOIN    PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR CUST
ON      LTRIM(COPA.CUST_NUM,'0') = LTRIM(CUST.CUST_ACCT_ID,'0')
JOIN    HIER HIER
ON      LTRIM(COPA.CUST_NUM,'0') = LTRIM(HIER.CUST_ACCT_ID,'0')
WHERE   CMPNY_CD IN ('8000','8545') -- PSAS & MPB
AND     POST_DT BETWEEN '2023-08-01' AND '2024-07-31'
AND     CUST.ACTIVE_CUST_IND = 'A'
-- AND     LTRIM(CUST.SLS_TERR_ID,'0') IN (
-- '7998','7997','7996','7995','7994','7993','7992','7989','7910','7905','7900','7898','7892','7891',
-- '7881','7830','7820','7805','7790','7785','7780','7765','7760','7755','7750','7745','7740','7737','7736','7730',
-- '7725','7717','7715','7710','7709','7700','7695','7685','7680','7675','7670','7665','7660','7655','7650','7645',
-- '7640','7630','7610','7602','7600','7595','7590','7585','7580','7570','7566','7560','7555','7552','7550','7545',
-- '7541','7540','7535','7525','7520','7510','7505','7225','7200','7120','7086','7085','7075','7070','7065','7025',
-- '7020','1132','876','842','837','821','761','426','402','400','280','212','195','194','99','7000','7001','1133'
-- )
GROUP BY COPA.CUST_NUM,
        CUST.CUST_ACCT_NAM,
        CUST.SAP_BUS_TYPE_DSCR,
        CUST.ACTIVE_CUST_IND,
        CUST.SLS_TERR_ID,
        CUST.HOME_DC_ID,
        CUST.DEA_NUM,
        CUST.ACCT_CLAS_CD,
        CUST.ACCT_CLAS_DSCR,
        CUST.CUST_BUS_TYP_DSCR,
        CUST.COMMON_ENTITY_ID,
        CUST.COMMON_ENTITY_NAME,
        CUST.COMMON_GRP_ID,
        CUST.COMMON_GRP_NAME,
        CUST.ACCT_340B_ID,
        CUST.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_FLG,
        CUST.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_PCT_RANGE_DSCR,
        CASE WHEN HIER.ISAM_NUMBER IS NULL THEN 'Not Assigned' ELSE HIER.ISAM_NUMBER END,
        CASE WHEN HIER.ISAM_NAME IS NULL THEN 'Not Assigned' ELSE HIER.ISAM_NAME END,
        CASE WHEN HIER.VPS_NUM IS NULL THEN 'Not Assigned' ELSE HIER.VPS_NUM END,
        CASE WHEN HIER.VPS_NAME IS NULL THEN 'Not Assigned' ELSE HIER.VPS_NAME END,
        HIER.BUS_SGMNT;

--SELECT * FROM PREP;
        
CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.INSIDE_SALES_EBIT AS
SELECT  DISTINCT PREP.CUST_ACCT_ID,
        PREP.CUST_ACCT_NAM,
        PREP.SAP_BUS_TYPE_DSCR,
        PREP.ACTIVE_CUST_IND,
        PREP.SLS_TERR_ID,
        PREP.HOME_DC_ID,
        PREP.DEA_NUM,
        PREP.ACCT_CLAS_CD,
        PREP.ACCT_CLAS_DSCR,
        PREP.CUST_BUS_TYP_DSCR,
        PREP.COMMON_ENTITY_ID,
        PREP.COMMON_ENTITY_NAME,
        PREP.COMMON_GRP_ID,
        PREP.COMMON_GRP_NAME,
        CASE WHEN PREP.ACCT_340B_ID='00000000000000000000' THEN '' ELSE PREP.ACCT_340B_ID END AS "ACCT_340B_ID",
        PREP.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_FLG,
        PREP.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_PCT_RANGE_DSCR,
        PREP.ISAM_NUMBER,
        PREP.ISAM_NAME,
        PREP.VPS_NUMBER,
        PREP.VPS_NAME,
        PREP.BUS_SGMNT,
        HMA.HM AS HM_FLAG,
        HMA.HMA AS HMA_FLAG,
        CASE WHEN SUM(RX_SLS_12MO)=0 THEN 0 ELSE SUM(GX_SLS_12MO)/SUM(RX_SLS_12MO) END AS "GCR_12MO",
        CASE WHEN SUM(RX_SLS_9MO)=0 THEN 0 ELSE SUM(GX_SLS_9MO)/SUM(RX_SLS_9MO) END AS "GCR_9MO",
        CASE WHEN SUM(RX_SLS_6MO)=0 THEN 0 ELSE SUM(GX_SLS_6MO)/SUM(RX_SLS_6MO) END AS "GCR_6MO",
        CASE WHEN SUM(RX_SLS_3MO)=0 THEN 0 ELSE SUM(GX_SLS_3MO)/SUM(RX_SLS_3MO) END AS "GCR_3MO",
        SUM(NET_SLS_12MO) AS "NET_SLS_12MO",
        SUM(NET_SLS_9MO) AS "NET_SLS_9MO",
        SUM(NET_SLS_6MO) AS "NET_SLS_6MO",
        SUM(NET_SLS_3MO) AS "NET_SLS_3MO",
        SUM(GP_12MO) AS "GP_12MO",	
        SUM(GP_9MO) AS "GP_9MO",	
        SUM(GP_6MO) AS "GP_6MO",
        SUM(GP_3MO) AS "GP_3MO",
        CASE WHEN SUM(NET_SLS_12MO)=0 THEN 0 ELSE SUM(GP_12MO)/SUM(NET_SLS_12MO) END AS "GP_%_SLS_12MO",
        CASE WHEN SUM(NET_SLS_9MO)=0 THEN 0 ELSE SUM(GP_9MO)/SUM(NET_SLS_9MO) END AS "GP_%_SLS_9MO",
        CASE WHEN SUM(NET_SLS_6MO)=0 THEN 0 ELSE SUM(GP_6MO)/SUM(NET_SLS_6MO) END AS "GP_%_SLS_6MO",
        CASE WHEN SUM(NET_SLS_3MO)=0 THEN 0 ELSE SUM(GP_3MO)/SUM(NET_SLS_3MO) END AS "GP_%_SLS_3MO",
        SUM(EBIT_12MO) AS "EBIT_12MO",
        SUM(EBIT_9MO) AS "EBIT_9MO",
        SUM(EBIT_6MO) AS "EBIT_6MO",
        SUM(EBIT_3MO) AS "EBIT_3MO",
        SUM(GX_EBIT_12MO) AS "GX_EBIT_12MO",
        SUM(BX_EBIT_12MO) AS "BX_EBIT_12MO",
        SUM(SX_EBIT_12MO) AS "SX_EBIT_12MO",
        SUM(BIO_EBIT_12MO) AS "BIO_EBIT_12MO",
        SUM(MPB_EBIT_12MO) AS "MPB_EBIT_12MO",
        SUM(OTC_EBIT_12MO) AS "OTC_EBIT_12MO"
FROM PREP PREP
-- LEFT JOIN SBX_PSAS_DB.ANALYTICS.CPH_T_HM_STORES_ALL_PRGMS HM
-- ON PREP.CUST_ACCT_ID = HM.CUST_ACCT_ID
LEFT JOIN SBX_PSAS_DB.ANALYTICS."CPH_HMA_Monthy_Member_List" HMA
ON PREP.CUST_ACCT_ID*1 = HMA.CUST_ACCT_ID*1
GROUP BY PREP.CUST_ACCT_ID,
        PREP.CUST_ACCT_NAM,
        PREP.SAP_BUS_TYPE_DSCR,
        PREP.ACTIVE_CUST_IND,
        PREP.SLS_TERR_ID,
        PREP.HOME_DC_ID,
        PREP.DEA_NUM,
        PREP.ACCT_CLAS_CD,
        PREP.ACCT_CLAS_DSCR,
        PREP.CUST_BUS_TYP_DSCR,
        PREP.COMMON_ENTITY_ID,
        PREP.COMMON_ENTITY_NAME,
        PREP.COMMON_GRP_ID,
        PREP.COMMON_GRP_NAME,
        CASE WHEN PREP.ACCT_340B_ID='00000000000000000000' THEN '' ELSE PREP.ACCT_340B_ID END,
        PREP.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_FLG,
        PREP.IQVIA_SLS1YR_PHARMA_RX_PRI_SUPLR_PCT_RANGE_DSCR,
        PREP.ISAM_NUMBER,
        PREP.ISAM_NAME,
        PREP.VPS_NUMBER,
        PREP.VPS_NAME,
        PREP.BUS_SGMNT,
        HMA.HM,
        HMA.HMA; 
        
--SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.INSIDE_SALES_EBIT;

-- SELECT * FROM SBX_PSAS_DB.ANALYTICS."CPH_T_HM_STORES_ALL_PRGMS";
-- SELECT * FROM SBX_PSAS_DB.ANALYTICS."CPH_HMA_Monthy_Member_List";
-- SELECT top 10* FROM PRD_PSAS_DB.EDWRPT.DIM_CUST_ACCT_CURR;

